AWSTemplateFormatVersion: 2010-09-09
Description: |
  Creates IAM user with programmatic access and store the secrets in secrets manager with the ability to rotate secrets in future

Parameters:
  Serial:
    Type: Number
    Description: Increment this to rotate secret credentials
  TechnicalContact:  
    Type: String
    Description: The owner group name or email address for the deployed resources
    Default: emailaddress@domain.com
  Application:
    Type: String
    Description: The Application name associated with this Resource
    Default: MyApplication
  CostCenter:
    Type: String
    Description: The Cost Center name associated with this Resource
    Default: CostCode
  Department:
    Type: String
    Description: The Department name associated with this Resource
    Default: Department Name    

Resources:
  LabIAMUser:
    Type: AWS::IAM::User
    Properties: 
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AutoScalingFullAccess
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        - arn:aws:iam::aws:policy/job-function/SupportUser 
      Policies:
        - PolicyName: LabIAMUserInlinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - 'iam:PassRole'
              Resource:
              - 'arn:aws:iam::12345678:role/aws-elasticbeanstalk'               
      Tags:
        - Key: TechnicalContact
          Value: 
            Ref: TechnicalContact
        - Key: Application
          Value:
            Ref: Application
        - Key: Cost Center
          Value:
            Ref: CostCenter
        - Key: Department
          Value:
            Ref: Department

      UserName: lab-iam-usr	
  AccessKey:
    Type: AWS::IAM::AccessKey
    Properties: 
      Serial: !Ref Serial
      Status: Active
      UserName: !Ref LabIAMUser
  AccessKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: !Sub "These are the credentials for the IAM User ${LabIAMUser}"
      SecretString: !Join
        - ""
        - - '{"AccessKeyId":"'
          - !Ref AccessKey
          - '","SecretAccessKey":"'
          - !GetAtt AccessKey.SecretAccessKey
          - '"}'